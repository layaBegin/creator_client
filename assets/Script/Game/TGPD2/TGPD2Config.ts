export namespace TGPD2Config {
    /**
     * 设计分辨率
     */
    export let designResolution = {
        width: 1280,
        height: 720
    }

    export let IntroductionConfig =
        "\n☆功能介绍：\n线数：投注数，最大为5注。\n单线点数：每注押注的分数，" +
        "根据场次等级不同最大投注与最小投注会相应发生比变化。\n开始：为单次开" +
        "始。\n托管：为自动开始，当余额不足时，自动取消托管。\n\n☆关卡介绍：\n" +
        "游戏过程分为三关，三关分别在4x4、5x5、6x6的方形区域随机派发宝石，其中" +
        "还包括一\n种特殊钻头。\n\n☆消除规则：\n游戏在每一关随机派发相应数量的" +
        "宝石，若有符合游戏规则的宝石组合，即可获得相应\n游戏分数。\n每次消除后" +
        "，游戏会自动生成新的宝石组合，直至不再形成符合游戏规则的宝石组合。\n" +
        "消除过程中先消除钻头，等游戏自动生成新的宝石组合，再继续消除宝石。\n" +
        "相同宝石相连越多，则获得分数越多。\n在每一关中累积获得15个钻头消除15" +
        "个砖墙上的砖块后，进入下一关，第三关过后游戏\n过程结束。\n游戏过程结束" +
        "后，若“当前评分”为正，则根据“当前评分”情况进入不同级别的“龙\n珠探" +
        "宝”游戏环节。\n\n☆龙珠探宝：\n在“龙珠探宝”游戏环节，龙珠自顶部下" +
        "落，碰到图案后随机向左右继续下落，根据龙\n珠最终所落区域，获得相应奖励" +
        "分数，获得分数计入玩家总分数。\n\n";
    export let CumulativeConfig =
        "第一关出现16个相连的同类宝石；或第\n二关出现20个及以上相连的同类宝石；" +
        "\n或第三关出现24个及以上相连的同类宝\n石时，本次游戏即可中当前时刻的累" +
        "积\n奖。"
    export let WarnConfig =
        "选择“保存退出”后您将离开本游戏，请您\n在保留期间（7天）内继续本游戏，若" +
        "您保\n留期限结束前未继续游戏，将视为您自愿\n“放弃退出”本游" +
        "戏。\n选择“放弃退出”将视为您自愿放弃游戏当\n前关卡进度及“当前评分”。"

    // export let basePath = "";//Config.GameConfig["LHDB"].resDir;
    /**
     * 配置宝石骨龙动画的资源路径
     * 用法传入宝石 id 
     */
    export enum gemConfig {
        // 第一关
        "gem/level1/WhiteJade" = 211,
        "gem/level1/Jasper" = 212,
        "gem/level1/DarkJade" = 213,
        "gem/level1/Agate" = 214,
        "gem/level1/Amber" = 215,
        // 第二关
        "gem/level2/Sardonyx" = 221,
        "gem/level2/Opal" = 222,
        "gem/level2/Amethyst" = 223,
        "gem/level2/Jadeite" = 224,
        "gem/level2/Pearl" = 225,
        // 第三关
        "gem/level3/Ruby" = 231,
        "gem/level3/Emerald" = 232,
        "gem/level3/Topaz" = 233,
        "gem/level3/Sapphire" = 234,
        "gem/level3/Diamond" = 235,
        // 特殊宝石 钻头
        "gem/DrillBit" = 241,
        "" = 242
    }
    /**
     * 服务端下发配置
     * 数值仅做参考 具体数值以服务端动态下发为准
     */
    export let coreConfig = {
        /**
         * 消除宝石的爆奖配置
         * [关卡][连线数量 - 4|5|6][宝石下标]
         * 第二维最大长度11 超过11表示直接中奖池大奖(但是根本不可能,因为奖池数值都是假的)
         */
        BonusConfig: [[
            [0.2, 0.4, 0.5, 1, 2],
            [0.4, 0.5, 1, 3, 5],
            [0.5, 1, 2, 5, 10],
            [0.8, 2, 4, 6, 50],
            [1, 3, 8, 10, 100],
            [2, 5, 16, 75, 200],
            [3, 10, 50, 100, 500],
            [15, 25, 100, 1000, 2000],
            [10, 50, 200, 2000, 5000],
            [20, 75, 500, 5000, 6000],
            [40, 80, 600, 6000, 8000]
        ], [
            [0.2, 0.4, 0.5, 1, 2],
            [0.4, 0.5, 1, 3, 5],
            [0.5, 1, 2, 5, 10],
            [0.8, 2, 4, 6, 50],
            [1, 3, 8, 10, 100],
            [2, 5, 16, 75, 200],
            [3, 10, 50, 100, 500],
            [15, 25, 100, 1000, 2000],
            [10, 50, 200, 2000, 5000],
            [20, 75, 500, 5000, 8000],
            [45, 100, 700, 7000, 10000]
        ], [
            [0.2, 0.4, 0.5, 1, 2],
            [0.4, 0.5, 1, 3, 5],
            [0.5, 1, 2, 5, 10],
            [0.8, 2, 4, 6, 50],
            [1, 3, 8, 10, 100],
            [2, 5, 16, 75, 200],
            [3, 10, 50, 100, 500],
            [5, 25, 100, 1000, 2000],
            [10, 50, 200, 2000, 5000],
            [20, 75, 500, 5000, 10000],
            [50, 120, 800, 8000, 10000]
        ]],
        LevelConfig: [[], [], []/* 66长度的数组 客户端不使用此数据 */],
        /* 
         * 龙珠夺宝结算配置信息 
         */
        SettleConfig: {
            baseBonus: [
                500,
                1000,
                20000,
                100000,
                2000000],

            baseScore: [
                0,
                1000,
                20000,
                100000,
                2000000],
            gruop: [
                [900, 700, 500, 300, 100],
                [1800, 1400, 1000, 600, 200],
                [30000, 25000, 20000, 15000, 10000],
                [120000, 110000, 100000, 90000, 80000],
                [2200000, 2100000, 190000, 1800000]]
        },
        /** 
         * 宝石下标配置
         * 必须配合StoneTypeConfig使用 用来获取当前关卡宝石的基础下标值
         * 但是客户端不使用这套逻辑
         */
        LevelStoneIndex: ["eGemType_WhiteJade", "eGemType_Sardonyx", "eGemType_Ruby"],
        StoneTypeConfig: {
            //第一关
            eGemType_WhiteJade: 211,//白玉
            eGemType_Jasper: 212, //碧玉
            eGemType_DarkJade: 213, //墨玉
            eGemType_Agate: 214, //玛瑙
            eGemType_Amber: 215, //琥珀

            //第二关
            eGemType_Sardonyx: 221, //祖玛红
            eGemType_Opal: 222, //猫眼石
            eGemType_Amethyst: 223, //紫宝石
            eGemType_Jadeite: 224, //翡翠
            eGemType_Pearl: 225, //珍珠

            //第三关
            eGemType_Ruby: 231, //红宝石
            eGemType_Emerald: 232, //绿宝石
            eGemType_Topaz: 233, //黄宝石
            eGemType_Sapphire: 234, //蓝宝石
            eGemType_Diamond: 235, //钻石

            //特殊道具
            eGemType_DrillBit: 241,//钻头
            eGemType_Invalid: 242,//无效宝石
        }

    }
    /** 
     * 服务端下发游戏规则配置
     */
    export let gameRule = {
        baseScore: 1,   // 仅使用这个数值
        bureau: 0,
        memberCount: 1,
        roomType: 5,
        startType: 0
    }
    /**
     * 服务端下发 抽水数值
     */
    export let profitPercentage: number = 0;

}

